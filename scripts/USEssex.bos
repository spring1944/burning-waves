#define TAK

piece base, hull, railings, boats,
	  main_gun_a, main_sleeve_a, main_barrel_a, main_flare_a, main_gun_b, main_sleeve_b, main_barrel_b, main_flare_b,
	  main_gun_c, main_sleeve_c, main_barrel_c, main_flare_c,
	  torp_turret, torp_flare1, torp_flare2, torp_flare3,
	  cp_turret, cp_guns, cp_flare1, cp_flare2, cp_flare3, cp_flare4,
	  aa20_turret_1, aa20_sleeve_1, aa20_barrel_1, aa20_flare_1, aa20_turret_2, aa20_sleeve_2, aa20_barrel_2, aa20_flare_2,
	  aa20_turret_3, aa20_sleeve_3, aa20_barrel_3, aa20_flare_3, aa20_turret_4, aa20_sleeve_4, aa20_barrel_4, aa20_flare_4,
	  aa20_turret_5, aa20_sleeve_5, aa20_barrel_5, aa20_flare_5, aa20_turret_6, aa20_sleeve_6, aa20_barrel_6, aa20_flare_6,
	  aa20_turret_7, aa20_sleeve_7, aa20_barrel_7, aa20_flare_7, aa20_turret_8, aa20_sleeve_8, aa20_barrel_8, aa20_flare_8,
	  exhaust, wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define main_gun_TURN		<15>
#define main_gun_PITCH		<15>

#define AA28_TURRET_TURN		<225>
#define AA28_TURRET_PITCH		<175>

#define AA20_TURRET_TURN		<225>
#define AA20_TURRET_PITCH		<175>

#define TORP_TURRET_TURN		<10>

//*********************Recoil
#define MAIN_GUN_RECOIL			[2.0]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define AA40_GUN_RECOIL			[0.4]
#define AA40_GUN_RECOIL_SPEED	[10]
#define AA40_GUN_BACK_SPEED		[4]

#define AA20_GUN_RECOIL			[0.3]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[5]

//*********************Death anim
#define HULL_LIST_SPEED			<15>
#define HULL_LIST_ANGLE_Z			<90>

//*********************Radar
#define RADAR_SPIN_SPEED		<30>

//********************Engine smoke
#define ENGINE_SMOKE_PIECE	exhaust
#define ENGINE_SMOKE_PERIOD	200

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
// main guns
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
// torpedo
#define SIG_AIM4			32
// 28mm AA
#define SIG_AIM5			64
// 20mm single guns
#define SIG_AIM6			128
#define SIG_AIM7			256
#define SIG_AIM8			512
#define SIG_AIM9			1024
#define SIG_AIM10			2048
#define SIG_AIM11			4096
#define SIG_AIM12			8192
#define SIG_AIM13			16384

#define ALL_WEAPON_SIGS		SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_AIM7|SIG_AIM8|SIG_AIM9|SIG_AIM10|SIG_AIM11|SIG_AIM12|SIG_AIM13

#define SMOKEPIECE	hull



#define XSMALL_MUZZLEFLASH	1024+5
#define XSMALL_SMOKE		1024+6

#define SMALL_MUZZLEFLASH	1024+8
#define SMALL_SMOKE			1024+9

#define MG_MUZZLEFLASH		1024+7

#define MEDIUM_MUZZLEFLASH	1024+3
#define MEDIUM_SMOKE		1024+4

#include "constants.h"
#include "damageSmoke.h"
static-var	CurrentSpeed, bMoving, aa28_flare, torp_flare, oldXZ, oldHeading;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE;
			sleep ENGINE_SMOKE_PERIOD;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn main_gun_c to y-axis <180> now;
	turn cp_turret to y-axis <180> now;
	turn aa20_turret_5 to y-axis <-90> now;
	turn aa20_turret_6 to y-axis <90> now;
	turn aa20_turret_7 to y-axis <-180> now;
	turn aa20_turret_8 to y-axis <180> now;

	aa28_flare=1;
	torp_flare=1;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

HideFlares()
{
	hide main_flare_a;
	hide main_flare_b;
	hide main_flare_c;
	hide cp_flare1;
	hide cp_flare2;
	hide cp_flare3;
	hide cp_flare4;
	hide aa20_flare_1;
	hide aa20_flare_2;
	hide aa20_flare_3;
	hide aa20_flare_4;
	hide aa20_flare_5;
	hide aa20_flare_6;
	hide aa20_flare_7;
	hide aa20_flare_8;
}

Create()
{
	start-script HideFlares();
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, newHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_DEATH|ALL_WEAPON_SIGS;
	sleep RESTORE_PERIOD;

	turn main_gun_a to y-axis <0> speed main_gun_TURN;
	turn main_sleeve_a to x-axis <0> speed main_gun_PITCH;
	turn main_gun_b to y-axis <0> speed main_gun_TURN;
	turn main_sleeve_b to x-axis <0> speed main_gun_PITCH;
	turn main_gun_c to y-axis <180> speed main_gun_TURN;
	turn main_sleeve_c to x-axis <0> speed main_gun_PITCH;

	turn cp_turret to y-axis <180> speed AA28_TURRET_TURN;
	turn cp_guns to x-axis <0> speed AA28_TURRET_PITCH;

	turn torp_turret to y-axis <180> speed TORP_TURRET_TURN;

	turn aa20_turret_1 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_2 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_3 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_3 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_4 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_4 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_5 to y-axis <-90> speed AA20_TURRET_TURN;
	turn aa20_sleeve_5 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_6 to y-axis <90> speed AA20_TURRET_TURN;
	turn aa20_sleeve_6 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_7 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve_7 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_8 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve_8 to x-axis <0> speed AA20_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = main_flare_a;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_gun_a;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn main_gun_a to y-axis heading speed main_gun_TURN;
	turn main_sleeve_a to x-axis (0-pitch) speed main_gun_PITCH;
	wait-for-turn main_gun_a around y-axis;
	wait-for-turn main_sleeve_a around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	emit-sfx MEDIUM_MUZZLEFLASH from main_flare_a;
	emit-sfx MEDIUM_SMOKE from main_flare_a;
	move main_barrel_a to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel_a to z-axis [0] speed MAIN_GUN_BACK_SPEED;
}

QueryWeapon2(piecenum)
{
	piecenum = main_flare_b;
}

AimFromWeapon2(piecenum)
{
	piecenum = main_gun_b;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn main_gun_b to y-axis heading speed main_gun_TURN;
	turn main_sleeve_b to x-axis (0-pitch) speed main_gun_PITCH;
	wait-for-turn main_gun_b around y-axis;
	wait-for-turn main_sleeve_b around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	emit-sfx MEDIUM_MUZZLEFLASH from main_flare_b;
	emit-sfx MEDIUM_SMOKE from main_flare_b;
	move main_barrel_b to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel_b to z-axis [0] speed MAIN_GUN_BACK_SPEED;
}

QueryWeapon3(piecenum)
{
	piecenum = main_flare_c;
}

AimFromWeapon3(piecenum)
{
	piecenum = main_gun_c;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn main_gun_c to y-axis heading speed main_gun_TURN;
	turn main_sleeve_c to x-axis (0-pitch) speed main_gun_PITCH;
	wait-for-turn main_gun_c around y-axis;
	wait-for-turn main_sleeve_c around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	emit-sfx MEDIUM_MUZZLEFLASH from main_flare_c;
	emit-sfx MEDIUM_SMOKE from main_flare_c;
	move main_barrel_c to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel_c to z-axis [0] speed MAIN_GUN_BACK_SPEED;
}

QueryWeapon4(piecenum)
{
	if(torp_flare==1)
	{
		piecenum = torp_flare1;
	}
	if(torp_flare==2)
	{
		piecenum = torp_flare2;
	}
	if(torp_flare==3)
	{
		piecenum = torp_flare3;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = torp_turret;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn torp_turret to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp_turret around y-axis;
	start-script RestoreTurret();
	return(TRUE);
}

FireWeapon4()
{
	torp_flare = torp_flare + 1;
	if(torp_flare>3)
	{
		torp_flare = 1;
	}
}

QueryWeapon5(piecenum)
{
	if(aa28_flare == 1)
	{
		piecenum = cp_flare1;
	}
	if(aa28_flare == 2)
	{
		piecenum = cp_flare2;
	}
	if(aa28_flare == 3)
	{
		piecenum = cp_flare3;
	}
	if(aa28_flare == 4)
	{
		piecenum = cp_flare4;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = cp_turret;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn cp_turret to y-axis heading speed AA28_TURRET_TURN;
	turn cp_guns to x-axis (0-pitch) speed AA28_TURRET_PITCH;
	wait-for-turn cp_turret around y-axis;
	wait-for-turn cp_guns around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot5(foo)
{
	aa28_flare = aa28_flare + 1;
	if(aa28_flare>4)
	{
		aa28_flare = 1;
	}
}

FireWeapon5()
{
	if(aa28_flare == 1)
	{
		emit-sfx XSMALL_MUZZLEFLASH from cp_flare1;
		emit-sfx XSMALL_SMOKE from cp_flare1;
		sleep 200;
	}
	if(aa28_flare == 2)
	{
		emit-sfx XSMALL_MUZZLEFLASH from cp_flare2;
		emit-sfx XSMALL_SMOKE from cp_flare2;
		sleep 200;
	}
	if(aa28_flare == 3)
	{
		emit-sfx XSMALL_MUZZLEFLASH from cp_flare3;
		emit-sfx XSMALL_SMOKE from cp_flare3;
		sleep 200;
	}
	if(aa28_flare == 4)
	{
		emit-sfx XSMALL_MUZZLEFLASH from cp_flare4;
		emit-sfx XSMALL_SMOKE from cp_flare4;
		sleep 200;
	}
}

QueryWeapon6(piecenum)
{
	piecenum = aa20_flare_1;
}

AimFromWeapon6(piecenum)
{
	piecenum = aa20_turret_1;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn aa20_turret_1 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_1 around y-axis;
	wait-for-turn aa20_sleeve_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon6()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_1;
	emit-sfx XSMALL_SMOKE from aa20_flare_1;
	move aa20_barrel_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon7(piecenum)
{
	piecenum = aa20_flare_2;
}

AimFromWeapon7(piecenum)
{
	piecenum = aa20_turret_2;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn aa20_turret_2 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_2 around y-axis;
	wait-for-turn aa20_sleeve_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon7()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_2;
	emit-sfx XSMALL_SMOKE from aa20_flare_2;
	move aa20_barrel_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon8(piecenum)
{
	piecenum = aa20_flare_3;
}

AimFromWeapon8(piecenum)
{
	piecenum = aa20_turret_3;
}

AimWeapon8(heading, pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8|SIG_DEATH;
	turn aa20_turret_3 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_3 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_3 around y-axis;
	wait-for-turn aa20_sleeve_3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon8()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_3;
	emit-sfx XSMALL_SMOKE from aa20_flare_3;
	move aa20_barrel_3 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_3 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon9(piecenum)
{
	piecenum = aa20_flare_4;
}

AimFromWeapon9(piecenum)
{
	piecenum = aa20_turret_4;
}

AimWeapon9(heading, pitch)
{
	signal SIG_AIM9;
	set-signal-mask SIG_AIM9|SIG_DEATH;
	turn aa20_turret_4 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_4 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_4 around y-axis;
	wait-for-turn aa20_sleeve_4 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon9()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_4;
	emit-sfx XSMALL_SMOKE from aa20_flare_4;
	move aa20_barrel_4 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_4 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon10(piecenum)
{
	piecenum = aa20_flare_5;
}

AimFromWeapon10(piecenum)
{
	piecenum = aa20_turret_5;
}

AimWeapon10(heading, pitch)
{
	signal SIG_AIM10;
	set-signal-mask SIG_AIM10|SIG_DEATH;
	turn aa20_turret_5 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_5 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_5 around y-axis;
	wait-for-turn aa20_sleeve_5 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon10()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_5;
	emit-sfx XSMALL_SMOKE from aa20_flare_5;
	move aa20_barrel_5 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_5 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon11(piecenum)
{
	piecenum = aa20_flare_6;
}

AimFromWeapon11(piecenum)
{
	piecenum = aa20_turret_6;
}

AimWeapon11(heading, pitch)
{
	signal SIG_AIM11;
	set-signal-mask SIG_AIM11|SIG_DEATH;
	turn aa20_turret_6 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_6 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_6 around y-axis;
	wait-for-turn aa20_sleeve_6 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon11()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_6;
	emit-sfx XSMALL_SMOKE from aa20_flare_6;
	move aa20_barrel_6 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_6 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon12(piecenum)
{
	piecenum = aa20_flare_7;
}

AimFromWeapon12(piecenum)
{
	piecenum = aa20_turret_7;
}

AimWeapon12(heading, pitch)
{
	signal SIG_AIM12;
	set-signal-mask SIG_AIM12|SIG_DEATH;
	turn aa20_turret_7 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_7 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_7 around y-axis;
	wait-for-turn aa20_sleeve_7 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon12()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_7;
	emit-sfx XSMALL_SMOKE from aa20_flare_7;
	move aa20_barrel_7 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_7 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon13(piecenum)
{
	piecenum = aa20_flare_8;
}

AimFromWeapon13(piecenum)
{
	piecenum = aa20_turret_8;
}

AimWeapon13(heading, pitch)
{
	signal SIG_AIM13;
	set-signal-mask SIG_AIM13|SIG_DEATH;
	turn aa20_turret_8 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_8 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_8 around y-axis;
	wait-for-turn aa20_sleeve_8 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon13()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_8;
	emit-sfx XSMALL_SMOKE from aa20_flare_8;
	move aa20_barrel_8 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_8 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to z-axis (0-HULL_LIST_ANGLE_Z) speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP;
	return (TRUE);
}
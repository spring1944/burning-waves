#define TAK

piece base, hull, tower, turret1, gun1, flare1_1, flare1_2, turret2, gun2, flare2_1, flare2_2,
	  torp1, torp2, wake1, wake2, wake3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MG_TURRET_TURN			<30>
#define MG_TURRET_PITCH			<45>

//*********************Death anim
#define HULL_LIST_SPEED		<5>
#define HULL_LIST_ANGLE		<20>

//*********************Cruise mode
#define CRUISE_MODE_DELAY	5000
#define CRUISE_MODE_ANGLE	<-5>
#define CRUISE_MODE_RAISE_SPEED	<2>

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"
static-var					CurrentSpeed, bMoving, bDying, flare1, flare2;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 100;
		}
		sleep 100;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn turret1 to y-axis <180> now;
	turn turret2 to y-axis <180> now;
	flare1 = TRUE;
	flare2 = TRUE;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	bDying = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 300;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	bMoving = TRUE;
	sleep CRUISE_MODE_DELAY;
	turn hull to x-axis CRUISE_MODE_ANGLE speed CRUISE_MODE_RAISE_SPEED;
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
	if(!bDying)
	{
		turn hull to x-axis <0> speed CRUISE_MODE_RAISE_SPEED*5;
	}
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn turret1 to y-axis <180> speed MG_TURRET_TURN;
	turn gun1 to x-axis <0> speed MG_TURRET_PITCH;
	turn turret2 to y-axis <180> speed MG_TURRET_TURN;
	turn gun2 to x-axis <0> speed MG_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = torp1;
}

AimFromWeapon1(piecenum)
{
	piecenum = torp1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	sleep 200;
}

QueryWeapon2(piecenum)
{
	piecenum = torp2;
}

AimFromWeapon2(piecenum)
{
	piecenum = torp2;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	sleep 200;
}

QueryWeapon3(piecenum)
{
	if(flare1)
	{
		piecenum = flare1_1;
	} else
	{	piecenum = flare1_2;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = turret1;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn turret1 to y-axis heading speed MG_TURRET_TURN;
	turn gun1 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn turret1 around y-axis;
	wait-for-turn gun1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	if(flare1)
	{
		show flare1_1;
		sleep 200;
		hide flare1_1;
	} else
	{
		show flare1_2;
		sleep 200;
		hide flare1_2;
	}
	flare1 = !flare1;
}

QueryWeapon4(piecenum)
{
	if(flare2)
	{
		piecenum = flare2_1;
	} else
	{	piecenum = flare2_2;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = turret2;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn turret2 to y-axis heading speed MG_TURRET_TURN;
	turn gun2 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn turret2 around y-axis;
	wait-for-turn gun2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	if(flare2)
	{
		show flare2_1;
		sleep 200;
		hide flare2_1;
	} else
	{
		show flare2_2;
		sleep 200;
		hide flare2_2;
	}
	flare2 = !flare2;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	bDying = TRUE;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to x-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn hull around x-axis;
		explode hull type		BITMAPONLY|BITMAP1;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	explode turret1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode turret2 type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}
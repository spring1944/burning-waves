#define TAK

piece base, hull, railings,
	  main_turret1, main_sleeve1, main_barrel11, main_flare11, main_barrel12, main_flare12,
	  main_turret2, main_sleeve2, main_barrel21, main_flare21, main_barrel22, main_flare22,
	  main_turret3, main_sleeve3, main_barrel31, main_flare31, main_barrel32, main_flare32,
	  aa20_turret1, aa20_sleeve1, aa20_barrel1, aa20_flare1,
	  aa20_turret2, aa20_sleeve2, aa20_barrel2, aa20_flare2,
	  aa20_turret3, aa20_sleeve3, aa20_barrel3, aa20_flare3,
	  aa20_turret4, aa20_sleeve4, aa20_barrel4, aa20_flare4,
	  aa20_turret5, aa20_sleeve5, aa20_barrel5, aa20_flare5,
	  aa20_turret6, aa20_sleeve6, aa20_barrel6, aa20_flare6,
	  aa20_turret7, aa20_sleeve7, aa20_barrel7, aa20_flare7,
	  torp_tubes1, torp_flare11, torp_flare12, torp_flare13,
	  torp_tubes2, torp_flare21, torp_flare22, torp_flare23,
	  exhaust1, exhaust2, wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<20>
#define MAIN_TURRET_PITCH		<20>

#define TORP_TURRET_TURN			<5>

#define AA20_TURRET_TURN			<30>
#define AA20_TURRET_PITCH			<45>

#define MAIN_MAX_ANGLE				<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[1]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define AA20_GUN_RECOIL			[0.3]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[3]

//*********************Death anim
#define HULL_LIST_SPEED			<1>
#define HULL_LIST_ANGLE			<5>

//********************Engine smoke
#define ENGINE_SMOKE_PIECE1	exhaust1
#define ENGINE_SMOKE_PIECE2	exhaust2
#define ENGINE_SMOKE_PERIOD	200

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_AIM7			256
#define SIG_AIM8			512
#define SIG_AIM9			1024
#define SIG_AIM10			2048
#define SIG_AIM11			4096
#define SIG_AIM12			8192

#define ALL_WEAPON_SIGS		SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_AIM7|SIG_AIM8|SIG_AIM9|SIG_AIM10|SIG_AIM11|SIG_AIM12

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"

static-var	CurrentSpeed, bMoving, main_flare_1, main_flare_2, main_flare_3, torp_flare_1, torp_flare_2,
			oldXZ, oldHeading;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE1;
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE2;
			sleep ENGINE_SMOKE_PERIOD;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn main_turret3 to y-axis <180> now;
	turn torp_tubes2 to y-axis <180> now;
	turn aa20_turret5 to y-axis <180> now;
	turn aa20_turret6 to y-axis <180> now;
	turn aa20_turret7 to y-axis <180> now;
	main_flare_1=TRUE;
	main_flare_2=TRUE;
	main_flare_3=TRUE;
	torp_flare_1=1;
	torp_flare_2=1;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, newHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_DEATH|ALL_WEAPON_SIGS;
	sleep RESTORE_PERIOD;

	turn main_turret1 to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve1 to x-axis <0> speed MAIN_TURRET_PITCH;
	turn main_turret2 to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve2 to x-axis <0> speed MAIN_TURRET_PITCH;
	turn main_turret3 to y-axis <180> speed MAIN_TURRET_TURN;
	turn main_sleeve3 to x-axis <0> speed MAIN_TURRET_PITCH;

	turn torp_tubes1 to y-axis <0> speed TORP_TURRET_TURN;
	turn torp_tubes2 to y-axis <180> speed TORP_TURRET_TURN;
	
	turn aa20_turret1 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve1 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret2 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve2 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret3 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve3 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret4 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve4 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret5 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve5 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret6 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve6 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret7 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve7 to x-axis <0> speed AA20_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	if(main_flare_1)
	{
		piecenum = main_flare11;
	} else
	{
		piecenum = main_flare12;
	}
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	if(pitch>MAIN_MAX_ANGLE)
	{
		// retarget, this one is too high
		set CHANGE_TARGET to 1;
		return FALSE;
	}
	turn main_turret1 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve1 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret1 around y-axis;
	wait-for-turn main_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	if(main_flare_1)
	{
		show main_flare11;
		move main_barrel11 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
		sleep 200;
		move main_barrel11 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
		hide main_flare11;
	} else
	{
		show main_flare12;
		move main_barrel12 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
		sleep 200;
		move main_barrel12 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
		hide main_flare12;
	}
	main_flare_1 = !main_flare_1;
}

QueryWeapon2(piecenum)
{
	if(main_flare_2)
	{
		piecenum = main_flare21;
	} else
	{
		piecenum = main_flare22;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = main_turret2;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	if(pitch>MAIN_MAX_ANGLE)
	{
		// retarget, this one is too high
		set CHANGE_TARGET to 2;
		return FALSE;
	}
	turn main_turret2 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve2 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret2 around y-axis;
	wait-for-turn main_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	if(main_flare_2)
	{
		show main_flare21;
		move main_barrel21 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
		sleep 200;
		move main_barrel21 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
		hide main_flare21;
	} else
	{
		show main_flare22;
		move main_barrel22 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
		sleep 200;
		move main_barrel22 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
		hide main_flare22;
	}
	main_flare_2 = !main_flare_2;
}

QueryWeapon3(piecenum)
{
	if(main_flare_3)
	{
		piecenum = main_flare31;
	} else
	{
		piecenum = main_flare32;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = main_turret3;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	if(pitch>MAIN_MAX_ANGLE)
	{
		// retarget, this one is too high
		set CHANGE_TARGET to 3;
		return FALSE;
	}
	turn main_turret3 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve3 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret3 around y-axis;
	wait-for-turn main_sleeve3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	if(main_flare_3)
	{
		show main_flare31;
		move main_barrel31 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
		sleep 200;
		move main_barrel31 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
		hide main_flare31;
	} else
	{
		show main_flare32;
		move main_barrel32 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
		sleep 200;
		move main_barrel32 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
		hide main_flare32;
	}
	main_flare_3 = !main_flare_3;
}

QueryWeapon4(piecenum)
{
	if(torp_flare_1==1)
	{
		piecenum = torp_flare11;
	}
	if(torp_flare_1==2)
	{
		piecenum = torp_flare12;
	}
	if(torp_flare_1==3)
	{
		piecenum = torp_flare13;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = torp_tubes1;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn torp_tubes1 to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp_tubes1 around y-axis;
	start-script RestoreTurret();
	return TRUE;
}

FireWeapon4()
{
	++torp_flare_1;
	if(torp_flare_1>3)
	{
		torp_flare_1=1;
	}
}

QueryWeapon5(piecenum)
{
	if(torp_flare_2==1)
	{
		piecenum = torp_flare21;
	}
	if(torp_flare_2==2)
	{
		piecenum = torp_flare22;
	}
	if(torp_flare_2==3)
	{
		piecenum = torp_flare23;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = torp_tubes2;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn torp_tubes2 to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp_tubes2 around y-axis;
	start-script RestoreTurret();
	return TRUE;
}

FireWeapon5()
{
	++torp_flare_2;
	if(torp_flare_2>3)
	{
		torp_flare_2=1;
	}
}

QueryWeapon6(piecenum)
{
	piecenum = aa20_flare1;
}

AimFromWeapon6(piecenum)
{
	piecenum = aa20_turret1;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn aa20_turret1 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret1 around y-axis;
	wait-for-turn aa20_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon6()
{
	show aa20_flare1;
	move aa20_barrel1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare1;
}

QueryWeapon7(piecenum)
{
	piecenum = aa20_flare2;
}

AimFromWeapon7(piecenum)
{
	piecenum = aa20_turret2;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn aa20_turret2 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret2 around y-axis;
	wait-for-turn aa20_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon7()
{
	show aa20_flare2;
	move aa20_barrel2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare2;
}

QueryWeapon8(piecenum)
{
	piecenum = aa20_flare3;
}

AimFromWeapon8(piecenum)
{
	piecenum = aa20_turret3;
}

AimWeapon8(heading, pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8|SIG_DEATH;
	turn aa20_turret3 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve3 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret3 around y-axis;
	wait-for-turn aa20_sleeve3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon8()
{
	show aa20_flare3;
	move aa20_barrel3 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel3 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare3;
}

QueryWeapon9(piecenum)
{
	piecenum = aa20_flare4;
}

AimFromWeapon9(piecenum)
{
	piecenum = aa20_turret4;
}

AimWeapon9(heading, pitch)
{
	signal SIG_AIM9;
	set-signal-mask SIG_AIM9|SIG_DEATH;
	turn aa20_turret4 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve4 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret4 around y-axis;
	wait-for-turn aa20_sleeve4 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon9()
{
	show aa20_flare4;
	move aa20_barrel4 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel4 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare4;
}

QueryWeapon10(piecenum)
{
	piecenum = aa20_flare5;
}

AimFromWeapon10(piecenum)
{
	piecenum = aa20_turret5;
}

AimWeapon10(heading, pitch)
{
	signal SIG_AIM10;
	set-signal-mask SIG_AIM10|SIG_DEATH;
	turn aa20_turret5 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve5 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret5 around y-axis;
	wait-for-turn aa20_sleeve5 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon10()
{
	show aa20_flare5;
	move aa20_barrel5 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel5 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare5;
}

QueryWeapon11(piecenum)
{
	piecenum = aa20_flare6;
}

AimFromWeapon11(piecenum)
{
	piecenum = aa20_turret6;
}

AimWeapon11(heading, pitch)
{
	signal SIG_AIM11;
	set-signal-mask SIG_AIM11|SIG_DEATH;
	turn aa20_turret6 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve6 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret6 around y-axis;
	wait-for-turn aa20_sleeve6 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon11()
{
	show aa20_flare6;
	move aa20_barrel6 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel6 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare6;
}

QueryWeapon12(piecenum)
{
	piecenum = aa20_flare7;
}

AimFromWeapon12(piecenum)
{
	piecenum = aa20_turret7;
}

AimWeapon12(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn aa20_turret7 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve7 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret7 around y-axis;
	wait-for-turn aa20_sleeve7 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon12()
{
	show aa20_flare7;
	move aa20_barrel7 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel7 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide aa20_flare7;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to x-axis (HULL_LIST_ANGLE) speed HULL_LIST_SPEED;
		wait-for-turn hull around x-axis;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	return (TRUE);
}
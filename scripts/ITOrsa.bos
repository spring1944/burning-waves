#define TAK

piece base, hull, boats,
	  main_turret1, main_sleeve1, main_barrel1, main_flare1,
	  main_turret2, main_sleeve2, main_barrel2, main_flare2,
	  aa37_turret1, aa37_sleeve1, aa37_barrel11, aa37_flare11, aa37_barrel12, aa37_flare12,
	  aa37_turret2, aa37_sleeve2, aa37_barrel21, aa37_flare21, aa37_barrel22, aa37_flare22,
	  aa20_turret1, aa20_sleeve1, aa20_gun11, aa20_flare11, aa20_gun12, aa20_flare12,
	  aa20_turret2, aa20_sleeve2, aa20_gun21, aa20_flare21, aa20_gun22, aa20_flare22,
	  torp_turret1, torp_flare11, torp_flare12,
	  torp_turret2, torp_flare21, torp_flare22,
	  exhaust, wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<25>
#define MAIN_TURRET_PITCH		<25>

#define TORP_TURRET_TURN		<5>

#define AA37_TURRET_TURN		<30>
#define AA37_TURRET_PITCH		<30>

#define AA20_TURRET_TURN		<30>
#define AA20_TURRET_PITCH		<45>

#define MAIN_MAX_ANGLE			<60>

//*********************Recoil
#define MAIN_GUN_RECOIL			[1]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define AA20_GUN_RECOIL			[0.3]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[3]

#define AA37_GUN_RECOIL			[0.4]
#define AA37_GUN_RECOIL_SPEED	[10]
#define AA37_GUN_BACK_SPEED		[3]

//*********************Death anim
#define HULL_LIST_SPEED			<10>
#define HULL_LIST_ANGLE			<-90>

//********************Engine smoke
#define ENGINE_SMOKE_PIECE	exhaust
#define ENGINE_SMOKE_PERIOD	200

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_AIM7			256
#define SIG_AIM8			512

#define ALL_WEAPON_SIGS		SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_AIM7|SIG_AIM8

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"

static-var	CurrentSpeed, bMoving, torp_flare_1, torp_flare_2, aa37_flare1, aa37_flare2, aa20_flare1, aa20_flare2,
			oldXZ, oldHeading;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE;
			sleep ENGINE_SMOKE_PERIOD;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn main_turret2 to y-axis <180> now;
	turn aa37_turret1 to y-axis <180> now;
	turn aa37_turret2 to y-axis <180> now;
	torp_flare_1=TRUE;
	torp_flare_2=TRUE;
	aa37_flare1=TRUE;
	aa37_flare2=TRUE;
	aa20_flare1=TRUE;
	aa20_flare2=TRUE;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, newHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_DEATH|ALL_WEAPON_SIGS;
	sleep RESTORE_PERIOD;

	turn main_turret1 to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve1 to x-axis <0> speed MAIN_TURRET_PITCH;
	turn main_turret2 to y-axis <180> speed MAIN_TURRET_TURN;
	turn main_sleeve2 to x-axis <0> speed MAIN_TURRET_PITCH;

	turn torp_turret1 to y-axis <0> speed TORP_TURRET_TURN;
	turn torp_turret2 to y-axis <0> speed TORP_TURRET_TURN;
	
	turn aa20_turret1 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve1 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret2 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve2 to x-axis <0> speed AA20_TURRET_PITCH;

	turn aa37_turret1 to y-axis <180> speed AA37_TURRET_TURN;
	turn aa37_sleeve1 to x-axis <0> speed AA37_TURRET_PITCH;
	turn aa37_turret2 to y-axis <180> speed AA37_TURRET_TURN;
	turn aa37_sleeve2 to x-axis <0> speed AA37_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = main_flare1;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	if(pitch>MAIN_MAX_ANGLE)
	{
		// retarget, this one is too high
		set CHANGE_TARGET to 1;
		return FALSE;
	}
	turn main_turret1 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve1 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret1 around y-axis;
	wait-for-turn main_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	show main_flare1;
	move main_barrel1 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel1 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	hide main_flare1;
}

QueryWeapon2(piecenum)
{
	piecenum = main_flare2;
}

AimFromWeapon2(piecenum)
{
	piecenum = main_turret2;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	if(pitch>MAIN_MAX_ANGLE)
	{
		// retarget, this one is too high
		set CHANGE_TARGET to 2;
		return FALSE;
	}
	turn main_turret2 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve2 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret2 around y-axis;
	wait-for-turn main_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	show main_flare2;
	move main_barrel2 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel2 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	hide main_flare2;
}

QueryWeapon3(piecenum)
{
	if(aa37_flare1)
	{
		piecenum = aa37_flare11;
	} else
	{
		piecenum = aa37_flare12;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = aa37_turret1;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn aa37_turret1 to y-axis heading speed AA37_TURRET_TURN;
	turn aa37_sleeve1 to x-axis (0-pitch) speed AA37_TURRET_PITCH;
	wait-for-turn aa37_turret1 around y-axis;
	wait-for-turn aa37_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot3(foo)
{
	if(aa37_flare1)
	{
		show aa37_flare11;
		move aa37_barrel11 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
		sleep 200;
		move aa37_barrel11 to z-axis [0] speed AA37_GUN_BACK_SPEED;
		hide aa37_flare11;
	} else
	{
		show aa37_flare12;
		move aa37_barrel12 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
		sleep 200;
		move aa37_barrel12 to z-axis [0] speed AA37_GUN_BACK_SPEED;
		hide aa37_flare12;
	}
	aa37_flare1 = !aa37_flare1;
}

QueryWeapon4(piecenum)
{
	if(aa37_flare2)
	{
		piecenum = aa37_flare21;
	} else
	{
		piecenum = aa37_flare22;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = aa37_turret2;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn aa37_turret2 to y-axis heading speed AA37_TURRET_TURN;
	turn aa37_sleeve2 to x-axis (0-pitch) speed AA37_TURRET_PITCH;
	wait-for-turn aa37_turret2 around y-axis;
	wait-for-turn aa37_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot4(foo)
{
	if(aa37_flare2)
	{
		show aa37_flare21;
		move aa37_barrel21 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
		sleep 200;
		move aa37_barrel21 to z-axis [0] speed AA37_GUN_BACK_SPEED;
		hide aa37_flare21;
	} else
	{
		show aa37_flare22;
		move aa37_barrel22 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
		sleep 200;
		move aa37_barrel22 to z-axis [0] speed AA37_GUN_BACK_SPEED;
		hide aa37_flare22;
	}
	aa37_flare2 = !aa37_flare2;
}

QueryWeapon5(piecenum)
{
	if(torp_flare_1)
	{
		piecenum = torp_flare11;
	} else
	{
		piecenum = torp_flare12;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = torp_turret1;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn torp_turret1 to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp_turret1 around y-axis;
	start-script RestoreTurret();
	return TRUE;
}

FireWeapon5()
{
	torp_flare_1 = !torp_flare_1;
}

QueryWeapon6(piecenum)
{
	if(torp_flare_2)
	{
		piecenum = torp_flare21;
	} else
	{
		piecenum = torp_flare22;
	}
}

AimFromWeapon6(piecenum)
{
	piecenum = torp_turret2;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn torp_turret2 to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp_turret2 around y-axis;
	start-script RestoreTurret();
	return TRUE;
}

FireWeapon6()
{
	torp_flare_2 = !torp_flare_2;
}

QueryWeapon7(piecenum)
{
	if(aa20_flare1)
	{
		piecenum = aa20_flare11;
	} else
	{
		piecenum = aa20_flare12;
	}
}

AimFromWeapon7(piecenum)
{
	piecenum = aa20_turret1;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn aa20_turret1 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret1 around y-axis;
	wait-for-turn aa20_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot7(foo)
{
	if(aa20_flare1)
	{
		show aa20_flare11;
		move aa20_gun11 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		move aa20_gun11 to z-axis [0] speed AA20_GUN_BACK_SPEED;
		hide aa20_flare11;
	} else
	{
		show aa20_flare12;
		move aa20_gun12 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		move aa20_gun12 to z-axis [0] speed AA20_GUN_BACK_SPEED;
		hide aa20_flare12;
	}
	aa20_flare1 = !aa20_flare1;
}

QueryWeapon8(piecenum)
{
	if(aa20_flare2)
	{
		piecenum = aa20_flare21;
	} else
	{
		piecenum = aa20_flare22;
	}
}

AimFromWeapon8(piecenum)
{
	piecenum = aa20_turret2;
}

AimWeapon8(heading, pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8|SIG_DEATH;
	turn aa20_turret2 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret2 around y-axis;
	wait-for-turn aa20_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot8(foo)
{
	if(aa20_flare2)
	{
		show aa20_flare21;
		move aa20_gun21 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		move aa20_gun21 to z-axis [0] speed AA20_GUN_BACK_SPEED;
		hide aa20_flare21;
	} else
	{
		show aa20_flare22;
		move aa20_gun22 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		move aa20_gun22 to z-axis [0] speed AA20_GUN_BACK_SPEED;
		hide aa20_flare22;
	}
	aa20_flare2 = !aa20_flare2;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to z-axis (HULL_LIST_ANGLE) speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	return (TRUE);
}
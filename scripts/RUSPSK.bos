#define TAK

piece base, hull, turret1, sleeve1, barrel1, flare1, aa_turret1, aa_sleeve1, aa_barrel1, aa_flare1,
	  aa_turret2, aa_sleeve2, aa_barrel2, aa_flare2, aa_turret3, aa_sleeve3, aa_barrel3, aa_flare3,
	  mg_turret1, mg_gun1, mg_flare1, mg_turret2, mg_gun2, mg_flare2,
	  wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<15>
#define MAIN_TURRET_PITCH		<20>

#define AA_TURRET_TURN			<30>
#define AA_TURRET_PITCH			<30>

#define MG_TURRET_TURN			<30>
#define MG_TURRET_PITCH			<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[1]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[0.9]

#define AA_GUN_RECOIL			[0.4]
#define AA_GUN_RECOIL_SPEED		[10]
#define AA_GUN_BACK_SPEED		[2]

//*********************Death anim
#define HULL_LIST_SPEED		<10>
#define HULL_LIST_ANGLE		<180>

#define RESTORE_PERIOD		2500

#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_DEATH			256

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"
static-var					CurrentSpeed, bMoving;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 500;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn aa_turret2 to y-axis <180> now;
	turn aa_turret3 to y-axis <180> now;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn turret1 to y-axis <0> speed MAIN_TURRET_TURN;
	turn sleeve1 to x-axis <0> speed MAIN_TURRET_PITCH;

	turn aa_turret1 to y-axis <0> speed AA_TURRET_TURN;
	turn aa_sleeve1 to x-axis <0> speed AA_TURRET_PITCH;
	turn aa_turret2 to y-axis <180> speed AA_TURRET_TURN;
	turn aa_sleeve2 to x-axis <0> speed AA_TURRET_PITCH;
	turn aa_turret3 to y-axis <180> speed AA_TURRET_TURN;
	turn aa_sleeve3 to x-axis <0> speed AA_TURRET_PITCH;

	turn mg_turret1 to y-axis <0> speed MG_TURRET_TURN;
	turn mg_gun1 to x-axis <0> speed MG_TURRET_PITCH;
	turn mg_turret2 to y-axis <0> speed MG_TURRET_TURN;
	turn mg_gun2 to x-axis <0> speed MG_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = flare1;
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn turret1 to y-axis heading speed MAIN_TURRET_TURN;
	turn sleeve1 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	show flare1;
	move barrel1 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel1 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	hide flare1;
}

QueryWeapon2(piecenum)
{
	piecenum = aa_flare1;
}

AimFromWeapon2(piecenum)
{
	piecenum = aa_turret1;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn aa_turret1 to y-axis heading speed AA_TURRET_TURN;
	turn aa_sleeve1 to x-axis (0-pitch) speed AA_TURRET_PITCH;
	wait-for-turn aa_turret1 around y-axis;
	wait-for-turn aa_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	show aa_flare1;
	move aa_barrel1 to z-axis (0-AA_GUN_RECOIL) speed AA_GUN_RECOIL_SPEED;
	sleep 200;
	move aa_barrel1 to z-axis [0] speed AA_GUN_BACK_SPEED;
	hide aa_flare1;
}

QueryWeapon3(piecenum)
{
	piecenum = aa_flare2;
}

AimFromWeapon3(piecenum)
{
	piecenum = aa_turret2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn aa_turret2 to y-axis heading speed AA_TURRET_TURN;
	turn aa_sleeve2 to x-axis (0-pitch) speed AA_TURRET_PITCH;
	wait-for-turn aa_turret2 around y-axis;
	wait-for-turn aa_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	show aa_flare2;
	move aa_barrel2 to z-axis (0-AA_GUN_RECOIL) speed AA_GUN_RECOIL_SPEED;
	sleep 200;
	move aa_barrel2 to z-axis [0] speed AA_GUN_BACK_SPEED;
	hide aa_flare2;
}

QueryWeapon4(piecenum)
{
	piecenum = aa_flare3;
}

AimFromWeapon4(piecenum)
{
	piecenum = aa_turret3;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn aa_turret3 to y-axis heading speed AA_TURRET_TURN;
	turn aa_sleeve3 to x-axis (0-pitch) speed AA_TURRET_PITCH;
	wait-for-turn aa_turret3 around y-axis;
	wait-for-turn aa_sleeve3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	show aa_flare3;
	move aa_barrel3 to z-axis (0-AA_GUN_RECOIL) speed AA_GUN_RECOIL_SPEED;
	sleep 200;
	move aa_barrel3 to z-axis [0] speed AA_GUN_BACK_SPEED;
	hide aa_flare3;
}

QueryWeapon5(piecenum)
{
	piecenum = mg_flare1;
}

AimFromWeapon5(piecenum)
{
	piecenum = mg_turret1;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn mg_turret1 to y-axis heading speed MG_TURRET_TURN;
	turn mg_gun1 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret1 around y-axis;
	wait-for-turn mg_gun1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon5()
{
	show mg_flare1;
	sleep 200;
	hide mg_flare1;
}

QueryWeapon6(piecenum)
{
	piecenum = mg_flare2;
}

AimFromWeapon6(piecenum)
{
	piecenum = mg_turret2;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn mg_turret2 to y-axis heading speed MG_TURRET_TURN;
	turn mg_gun2 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret2 around y-axis;
	wait-for-turn mg_gun2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon6()
{
	show mg_flare2;
	sleep 200;
	hide mg_flare2;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to x-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		explode hull type		BITMAPONLY|BITMAP1;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	explode turret1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa_turret1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa_turret2 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa_turret3 type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}
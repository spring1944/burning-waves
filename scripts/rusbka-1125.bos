#define TAK

piece base, hull, main_turret, main_sleeve, main_barrel, main_flare, mg_turret1, mg_sleeve1, mg_barrel1, mg_flare1,
	  mg_turret2, mg_sleeve2, mg_barrel2, mg_flare2, mg_turret3, mg_sleeve3, mg_barrel3, mg_flare3,
	  flag1, flag2, flag3, wake1, wake2, wake3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<15>
#define MAIN_TURRET_PITCH		<20>

#define MG_TURRET_TURN			<30>
#define MG_TURRET_PITCH			<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[0.5]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[0.5]

//*********************Death anim
#define HULL_LIST_SPEED		<5>
#define HULL_LIST_ANGLE		<-5>

//********************Flag
#define FLAG_FLAP_PERIOD	500
#define FLAG_FLAP_SPEED		<30>
#define FLAG_FLAP_ANGLE		<15>

#define RESTORE_PERIOD		2500

#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_DEATH			64

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"
static-var					CurrentSpeed, bMoving;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 500;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn mg_turret3 to y-axis <180> now;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

FlagFlap()
{
	while(TRUE)
	{
		//turn flag1 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag2 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
		//turn flag1 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag2 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
	}
}

Create()
{
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
	start-script FlagFlap();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 300;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn main_turret to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve to x-axis <0> speed MAIN_TURRET_PITCH;

	turn mg_turret1 to y-axis <0> speed MG_TURRET_TURN;
	turn mg_sleeve1 to x-axis <0> speed MG_TURRET_PITCH;
	turn mg_turret2 to y-axis <0> speed MG_TURRET_TURN;
	turn mg_sleeve2 to x-axis <0> speed MG_TURRET_PITCH;
	turn mg_turret3 to y-axis <180> speed MG_TURRET_TURN;
	turn mg_sleeve3 to x-axis <0> speed MG_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = main_flare;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn main_turret to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret around y-axis;
	wait-for-turn main_sleeve around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	show main_flare;
	move main_barrel to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	hide main_flare;
}

QueryWeapon2(piecenum)
{
	piecenum = mg_flare1;
}

AimFromWeapon2(piecenum)
{
	piecenum = mg_turret1;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn mg_turret1 to y-axis heading speed MG_TURRET_TURN;
	turn mg_sleeve1 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret1 around y-axis;
	wait-for-turn mg_sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	show mg_flare1;
	sleep 200;
	hide mg_flare1;
}

QueryWeapon3(piecenum)
{
	piecenum = mg_flare2;
}

AimFromWeapon3(piecenum)
{
	piecenum = mg_turret2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn mg_turret2 to y-axis heading speed MG_TURRET_TURN;
	turn mg_sleeve2 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret2 around y-axis;
	wait-for-turn mg_sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	show mg_flare2;
	sleep 200;
	hide mg_flare2;
}

QueryWeapon4(piecenum)
{
	piecenum = mg_flare3;
}

AimFromWeapon4(piecenum)
{
	piecenum = mg_turret3;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn mg_turret3 to y-axis heading speed MG_TURRET_TURN;
	turn mg_sleeve3 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret3 around y-axis;
	wait-for-turn mg_sleeve3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	show mg_flare3;
	sleep 200;
	hide mg_flare3;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to x-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		explode hull type		BITMAPONLY|BITMAP1;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	explode main_turret type	FALL|EXPLODE_ON_HIT|FIRE;
	explode mg_turret1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode mg_turret2 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode mg_turret3 type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}
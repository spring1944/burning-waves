#define TAK

piece base, hull, mount20_1, sleeve20_1, barrel20_1, flare20_1, mount20_2, sleeve20_2, barrel20_2, flare20_2,
	  mount37, gun37, flare37,
	  flag1, flag2, flag3, wake1, wake2, wake3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define AA37_TURRET_TURN		<30>
#define AA37_TURRET_PITCH		<30>

#define AA20_TURRET_TURN		<45>
#define AA20_TURRET_PITCH		<45>

//*********************Recoil
#define AA37_GUN_RECOIL			[0.4]
#define AA37_GUN_RECOIL_SPEED	[10]
#define AA37_GUN_BACK_SPEED		[0.2]

#define AA20_GUN_RECOIL			[0.4]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[0.5]

//*********************Death anim
#define HULL_LIST_SPEED		<15>
#define HULL_LIST_ANGLE		<-90>

//********************Flag
#define FLAG_FLAP_PERIOD	500
#define FLAG_FLAP_SPEED		<30>
#define FLAG_FLAP_ANGLE		<15>

#define RESTORE_PERIOD		2500

#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_DEATH			32

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"
static-var					CurrentSpeed, bMoving;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 500;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn mount20_1 to y-axis <180> now;
	turn mount20_2 to y-axis <180> now;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

FlagFlap()
{
	while(TRUE)
	{
		//turn flag1 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag2 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
		//turn flag1 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag2 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
	}
}

Create()
{
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
	start-script FlagFlap();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 300;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn mount37 to y-axis <0> speed AA37_TURRET_TURN;
	turn gun37 to x-axis <0> speed AA37_TURRET_PITCH;

	turn mount20_1 to y-axis <180> speed AA20_TURRET_TURN;
	turn sleeve20_1 to x-axis <0> speed AA20_TURRET_PITCH;
	turn mount20_2 to y-axis <180> speed AA20_TURRET_TURN;
	turn sleeve20_2 to x-axis <0> speed AA20_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = flare37;
}

AimFromWeapon1(piecenum)
{
	piecenum = mount37;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn mount37 to y-axis heading speed AA37_TURRET_TURN;
	turn gun37 to x-axis (0-pitch) speed AA37_TURRET_PITCH;
	wait-for-turn mount37 around y-axis;
	wait-for-turn gun37 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	show flare37;
	// Oops, I forgot to set the model for recoil on that gun
	//move barrel_ma to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	//move barrel_ma to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	hide flare37;
}

QueryWeapon2(piecenum)
{
	piecenum = flare20_1;
}

AimFromWeapon2(piecenum)
{
	piecenum = mount20_1;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn mount20_1 to y-axis heading speed AA20_TURRET_TURN;
	turn sleeve20_1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn mount20_1 around y-axis;
	wait-for-turn sleeve20_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	show flare20_1;
	move barrel20_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel20_1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide flare20_1;
}

QueryWeapon3(piecenum)
{
	piecenum = flare20_2;
}

AimFromWeapon3(piecenum)
{
	piecenum = mount20_2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn mount20_2 to y-axis heading speed AA20_TURRET_TURN;
	turn sleeve20_2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn mount20_2 around y-axis;
	wait-for-turn sleeve20_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	show flare20_2;
	move barrel20_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel20_2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	hide flare20_2;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to z-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		explode hull type		BITMAPONLY|BITMAP1;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	explode mount37 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode mount20_1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode mount20_2 type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}
#define TAK

piece base, hull, railings, boats,
	  main_turret, main_sleeve, main_barrel, main_flare,
	  aa40_turret_1, aa40_sleeve_1, aa40_barrel_11, aa40_flare_11, aa40_barrel_21, aa40_flare_21,
	  aa40_turret_2, aa40_sleeve_2, aa40_barrel_12, aa40_flare_12, aa40_barrel_22, aa40_flare_22,
	  aa20_turret_1, aa20_sleeve_1, aa20_barrel_1, aa20_flare_1, aa20_turret_2, aa20_sleeve_2, aa20_barrel_2, aa20_flare_2,
	  aa20_turret_3, aa20_sleeve_3, aa20_barrel_3, aa20_flare_3, aa20_turret_4, aa20_sleeve_4, aa20_barrel_4, aa20_flare_4,
	  wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<15>
#define MAIN_TURRET_PITCH		<15>

#define AA40_TURRET_TURN		<30>
#define AA40_TURRET_PITCH		<30>

#define AA20_TURRET_TURN			<30>
#define AA20_TURRET_PITCH			<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[2.0]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define AA40_GUN_RECOIL			[0.4]
#define AA40_GUN_RECOIL_SPEED	[10]
#define AA40_GUN_BACK_SPEED		[4]

#define AA20_GUN_RECOIL			[0.3]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[5]

//*********************Death anim
#define HULL_LIST_SPEED			<3>
#define HULL_LIST_ANGLE_Z			<15>

#define RESTORE_PERIOD		2500


#define SIG_MOVE			2
// main gun
#define SIG_AIM1			4
// 40mm AA
#define SIG_AIM2			8
#define SIG_AIM3			16
// 20mm single guns
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_AIM7			256

#define SIG_DEATH			1024

#define ALL_WEAPON_SIGS		SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_AIM7

// effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define XSMALL_MUZZLEFLASH 1024+5
#define XSMALL_MUZZLEDUST 1024+6
#define MG_MUZZLEFLASH 1024+7
#define SMALL_MUZZLEFLASH 1024+3
#define SMALL_MUZZLEDUST 1024+4
#define MEDIUMLARGE_MUZZLEFLASH 1024+8
#define MEDIUMLARGE_MUZZLEDUST 1024+9

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"
static-var	CurrentSpeed, bMoving, aa40_1_flare, aa40_2_flare, oldXZ, oldHeading;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// Nothing to do on this particular ship
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn aa40_turret_2 to y-axis <180> now;
	turn aa20_turret_3 to y-axis <180> now;
	turn aa20_turret_4 to y-axis <180> now;
	aa40_1_flare=TRUE;
	aa40_2_flare=TRUE;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

HideFlares()
{
	hide main_flare;
	hide aa40_flare_11;
	hide aa40_flare_12;
	hide aa40_flare_21;
	hide aa40_flare_22;
	hide aa20_flare_1;
	hide aa20_flare_2;
	hide aa20_flare_3;
	hide aa20_flare_4;
}

Create()
{
	start-script HideFlares();
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, newHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_DEATH|ALL_WEAPON_SIGS;
	sleep RESTORE_PERIOD;

	turn main_turret to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve to x-axis <0> speed MAIN_TURRET_PITCH;

	turn aa40_turret_1 to y-axis <0> speed AA40_TURRET_TURN;
	turn aa40_sleeve_1 to x-axis <0> speed AA40_TURRET_PITCH;
	turn aa40_turret_2 to y-axis <180> speed AA40_TURRET_TURN;
	turn aa40_sleeve_2 to x-axis <0> speed AA40_TURRET_PITCH;

	turn aa20_turret_1 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_2 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_3 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve_3 to x-axis <0> speed AA20_TURRET_PITCH;
	turn aa20_turret_4 to y-axis <180> speed AA20_TURRET_TURN;
	turn aa20_sleeve_4 to x-axis <0> speed AA20_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = main_flare;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn main_turret to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret around y-axis;
	wait-for-turn main_sleeve around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	emit-sfx MEDIUMLARGE_MUZZLEFLASH from main_flare;
	emit-sfx MEDIUMLARGE_MUZZLEDUST from main_flare;
//	show main_flare;
	move main_barrel to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel to z-axis [0] speed MAIN_GUN_BACK_SPEED;
//	hide main_flare;
}

QueryWeapon2(piecenum)
{
	if(aa40_1_flare)
	{
		piecenum = aa40_flare_11;
	} else
	{
		piecenum = aa40_flare_12;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = aa40_turret_1;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn aa40_turret_1 to y-axis heading speed AA40_TURRET_TURN;
	turn aa40_sleeve_1 to x-axis (0-pitch) speed AA40_TURRET_PITCH;
	wait-for-turn aa40_turret_1 around y-axis;
	wait-for-turn aa40_sleeve_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot2(foo)
{
	if(aa40_1_flare)
	{
		emit-sfx SMALL_MUZZLEFLASH from aa40_flare_11;
		emit-sfx SMALL_MUZZLEDUST from aa40_flare_11;
		move aa40_barrel_11 to z-axis (0-AA40_GUN_RECOIL) speed AA40_GUN_RECOIL_SPEED;
		sleep 200;
		move aa40_barrel_11 to z-axis [0] speed AA40_GUN_BACK_SPEED;
	} else
	{
		emit-sfx SMALL_MUZZLEFLASH from aa40_flare_12;
		emit-sfx SMALL_MUZZLEDUST from aa40_flare_12;
		move aa40_barrel_12 to z-axis (0-AA40_GUN_RECOIL) speed AA40_GUN_RECOIL_SPEED;
		sleep 200;
		move aa40_barrel_12 to z-axis [0] speed AA40_GUN_BACK_SPEED;
	}
	aa40_1_flare = !aa40_1_flare;
	
}

FireWeapon2()
{
}

QueryWeapon3(piecenum)
{
	if(aa40_2_flare)
	{
		piecenum = aa40_flare_21;
	} else
	{
		piecenum = aa40_flare_22;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = aa40_turret_2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn aa40_turret_2 to y-axis heading speed AA40_TURRET_TURN;
	turn aa40_sleeve_2 to x-axis (0-pitch) speed AA40_TURRET_PITCH;
	wait-for-turn aa40_turret_2 around y-axis;
	wait-for-turn aa40_sleeve_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot3(foo)
{
	if(aa40_2_flare)
	{
		emit-sfx SMALL_MUZZLEFLASH from aa40_flare_21;
		emit-sfx SMALL_MUZZLEDUST from aa40_flare_21;
		move aa40_barrel_21 to z-axis (0-AA40_GUN_RECOIL) speed AA40_GUN_RECOIL_SPEED;
		sleep 200;
		move aa40_barrel_21 to z-axis [0] speed AA40_GUN_BACK_SPEED;
	} else
	{
		emit-sfx SMALL_MUZZLEFLASH from aa40_flare_22;
		emit-sfx SMALL_MUZZLEDUST from aa40_flare_22;
		move aa40_barrel_22 to z-axis (0-AA40_GUN_RECOIL) speed AA40_GUN_RECOIL_SPEED;
		sleep 200;
		move aa40_barrel_22 to z-axis [0] speed AA40_GUN_BACK_SPEED;
	}
	aa40_2_flare = !aa40_2_flare;
}

FireWeapon3()
{
}

QueryWeapon4(piecenum)
{
	piecenum = aa20_flare_1;
}

AimFromWeapon4(piecenum)
{
	piecenum = aa20_turret_1;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn aa20_turret_1 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_1 around y-axis;
	wait-for-turn aa20_sleeve_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{

}

Shot4()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_1;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_1;
	move aa20_barrel_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon5(piecenum)
{
	piecenum = aa20_flare_2;
}

AimFromWeapon5(piecenum)
{
	piecenum = aa20_turret_2;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn aa20_turret_2 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_2 around y-axis;
	wait-for-turn aa20_sleeve_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon5()
{

}

Shot5()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_2;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_2;
	move aa20_barrel_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon6(piecenum)
{
	piecenum = aa20_flare_3;
}

AimFromWeapon6(piecenum)
{
	piecenum = aa20_turret_3;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn aa20_turret_3 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_3 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_3 around y-axis;
	wait-for-turn aa20_sleeve_3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon6()
{

}

Shot6()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_3;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_3;
	move aa20_barrel_3 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_3 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon7(piecenum)
{
	piecenum = aa20_flare_4;
}

AimFromWeapon7(piecenum)
{
	piecenum = aa20_turret_4;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn aa20_turret_4 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_4 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_4 around y-axis;
	wait-for-turn aa20_sleeve_4 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon7()
{

}

Shot7()
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_4;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_4;
	move aa20_barrel_4 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_4 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to z-axis (0-HULL_LIST_ANGLE_Z) speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	return (TRUE);
}
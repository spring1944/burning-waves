#define TAK

piece base, hull, main_turret, sleeve, barrel, flare, turret_37, sleeve_37, barrel_37, flare_37,
	  turret_20_1, sleeve_20_1, barrel_20_1, flare_20_1, turret_20_2, sleeve_20_2, barrel_20_2, flare_20_2,
	  turret_20_3, sleeve_20_3, barrel_20_3, flare_20_3, boats, ramp, turret, grabber, link,
	  wake1, wake2, wake3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Ramp
#define RAMP_OPEN_ANGLE		<180>
#define RAMP_OPEN_SPEED		<30>

#define LOAD_DIST			[125]

//********************Turret turn speeds
#define MAIN_TURRET_TURN	<12>
#define MAIN_TURRET_PITCH	<15>

#define AA37_TURRET_TURN		<30>
#define AA37_TURRET_PITCH		<30>

#define AA20_TURRET_TURN		<45>
#define AA20_TURRET_PITCH		<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[0.8]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[0.2]

#define AA37_GUN_RECOIL			[0.4]
#define AA37_GUN_RECOIL_SPEED	[10]
#define AA37_GUN_BACK_SPEED		[0.2]

#define AA20_GUN_RECOIL			[0.4]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[0.5]

//*********************Death anim
#define HULL_LIST_SPEED		<5>
#define HULL_LIST_ANGLE		<5>

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_LOAD			128

#define SMOKEPIECE	hull

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"
static-var					MaxSpeed, bRampOpen, bMoving, bTooFar, boom_len, boom_heading, boom_pitch;

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 500;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn turret_37 to y-axis <180> now;
	turn turret_20_3 to y-axis <180> now;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	MaxSpeed = get MAX_SPEED;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

OpenRamp()
{
	var newSpeed;
	// we are opening the ramp, let's slow down (else we'll have the hold full of water)
	newSpeed = MaxSpeed/10;
	set MAX_SPEED to newSpeed;
	turn ramp to x-axis RAMP_OPEN_ANGLE speed RAMP_OPEN_SPEED;
	wait-for-turn ramp around x-axis;
	bRampOpen = TRUE;
	return;
}

CloseRamp()
{
	bRampOpen = FALSE;
	turn ramp to x-axis 0 speed RAMP_OPEN_SPEED;
	wait-for-turn ramp around x-axis;
	// now the ramp is closed, we can go full speed again
	set MAX_SPEED to MaxSpeed;
	return;
}

//Transport stuff
BoomCalc(posxz,posy)
{
	var dxz,dy,lenxz;

	dxz = get PIECE_XZ(turret) - posxz;
	dy = posy - get PIECE_Y(turret);
	lenxz = get XZ_HYPOT(dxz);

	boom_len = get HYPOT(lenxz,dy);
	boom_heading = get XZ_ATAN(dxz);
	boom_pitch = get ATAN(dy,lenxz);
	bTooFar = (boom_len > LOAD_DIST);
}

PositionLink(posxz,posy)
{
	turn turret to y-axis boom_heading now;
	turn grabber to x-axis 0-boom_pitch now;
	move grabber to z-axis boom_len now;
}

ReturnLink()
{
	turn turret to y-axis <0> now;
	turn grabber to x-axis <0> now;
	move grabber to z-axis [0] now;
}

TransportPickup(unitid)
{
	signal SIG_LOAD;
	set-signal-mask SIG_LOAD;
    call-script BoomCalc(get UNIT_XZ(unitid),get UNIT_Y(unitid));
	if( bTooFar )
	{
		return (FALSE);
	}
	call-script OpenRamp();
	while (!bRampOpen)
	{
		sleep 250;
	}
	set BUSY to 1;
	attach-unit unitid to (0-1);
	sleep 500;
	set BUSY to 0;
	sleep 2500;
	start-script CloseRamp();
}

TransportDrop(unitid, position)
{
	signal SIG_LOAD;
	set-signal-mask SIG_LOAD;
    call-script BoomCalc(position,get GROUND_HEIGHT(position));
	if( bTooFar )
	{
		return (1);
	}
	call-script OpenRamp();
	while (!bRampOpen)
	{
		sleep 250;
	}
	set BUSY to 1;
	attach-unit unitid to link;
	call-script PositionLink();
	sleep 50;
	drop-unit unitid;
	call-script ReturnLink();
	sleep 1000;
	set BUSY to 0;
	sleep 1500;
	start-script CloseRamp();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 300;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_DEATH;
	sleep RESTORE_PERIOD;
	turn main_turret to y-axis <0> speed MAIN_TURRET_TURN;
	turn sleeve to x-axis <0> speed MAIN_TURRET_PITCH;

	turn turret_37 to y-axis <180> speed AA37_TURRET_TURN;
	turn sleeve_37 to x-axis <0> speed AA37_TURRET_PITCH;

	turn turret_20_1 to y-axis <0> speed AA20_TURRET_TURN;
	turn sleeve_20_1 to x-axis <0> speed AA20_TURRET_PITCH;
	turn turret_20_2 to y-axis <0> speed AA20_TURRET_TURN;
	turn sleeve_20_2 to x-axis <0> speed AA20_TURRET_PITCH;
	turn turret_20_3 to y-axis <180> speed AA20_TURRET_TURN;
	turn sleeve_20_3 to x-axis <0> speed AA20_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = flare;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn main_turret to y-axis heading speed MAIN_TURRET_TURN;
	turn sleeve to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	show flare;
	move barrel to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	hide flare;
}

QueryWeapon2(piecenum)
{
	piecenum = flare_37;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret_37;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn turret_37 to y-axis heading speed AA37_TURRET_TURN;
	turn sleeve_37 to x-axis (0-pitch) speed AA37_TURRET_PITCH;
	wait-for-turn turret_37 around y-axis;
	wait-for-turn sleeve_37 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	show flare_37;
	move barrel_37 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_37 to z-axis 0 speed AA37_GUN_BACK_SPEED;
	hide flare_37;
}

QueryWeapon3(piecenum)
{
	piecenum = flare_20_1;
}

AimFromWeapon3(piecenum)
{
	piecenum = turret_20_1;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn turret_20_1 to y-axis heading speed AA20_TURRET_TURN;
	turn sleeve_20_1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn turret_20_1 around y-axis;
	wait-for-turn sleeve_20_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	show flare_20_1;
	move barrel_20_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_20_1 to z-axis 0 speed AA20_GUN_BACK_SPEED;
	hide flare_20_1;
}

QueryWeapon4(piecenum)
{
	piecenum = flare_20_2;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret_20_2;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn turret_20_2 to y-axis heading speed AA20_TURRET_TURN;
	turn sleeve_20_2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn turret_20_2 around y-axis;
	wait-for-turn sleeve_20_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	show flare_20_2;
	move barrel_20_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_20_2 to z-axis 0 speed AA20_GUN_BACK_SPEED;
	hide flare_20_2;
}

QueryWeapon5(piecenum)
{
	piecenum = flare_20_3;
}

AimFromWeapon5(piecenum)
{
	piecenum = turret_20_3;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn turret_20_3 to y-axis heading speed AA20_TURRET_TURN;
	turn sleeve_20_3 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn turret_20_3 around y-axis;
	wait-for-turn sleeve_20_3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon5()
{
	show flare_20_3;
	move barrel_20_3 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_20_3 to z-axis 0 speed AA20_GUN_BACK_SPEED;
	hide flare_20_3;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<50)
	{
		corpsetype = 1;
		turn hull to x-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn hull around x-axis;
		explode hull type		BITMAPONLY|BITMAP1;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	explode main_turret type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}